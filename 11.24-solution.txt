The general approach here is to move all non-zero elements to the beginning. We keep an index k at the beginning and increment it to mark the next position of for the non-zero elements. At the end, we fill the rest of the values in the array with zeroes.

This is linear O(n) time since it is done in one pass through the array.
Since we're not allocating any additional space except for a single variable, it is O(1) space.

class Solution:
  def moveZeros(self, nums):
    k = 0
    for i in range(len(nums)):
      if nums[i] != 0:
        nums[k] = nums[i]
        k += 1

    for j in range(k, len(nums)):
      nums[j] = 0

nums = [0, 0, 0, 2, 0, 1, 3, 4, 0, 0]
Solution().moveZeros(nums)
print(nums)
# [2, 1, 3, 4, 0, 0, 0, 0, 0, 0]
